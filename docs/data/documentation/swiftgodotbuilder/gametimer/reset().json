{"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Clears accumulated time without changing the running state."}],"variants":[{"paths":["\/documentation\/swiftgodotbuilder\/gametimer\/reset()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","title":"reset()","symbolKind":"method","externalID":"s:17SwiftGodotBuilder9GameTimerC5resetyyF","modules":[{"name":"SwiftGodotBuilder"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"()","kind":"text"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"After calling this, "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodotBuilder\/documentation\/SwiftGodotBuilder\/GameTimer\/elapsed"},{"type":"text","text":" is "},{"type":"codeVoice","code":"0"},{"type":"text","text":". If the timer is running,"},{"type":"text","text":" "},{"type":"text","text":"it begins counting from the start of the interval again."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodotBuilder\/documentation\/SwiftGodotBuilder\/GameTimer\/reset()"},"hierarchy":{"paths":[["doc:\/\/SwiftGodotBuilder\/documentation\/SwiftGodotBuilder","doc:\/\/SwiftGodotBuilder\/documentation\/SwiftGodotBuilder\/GameTimer"]]},"references":{"doc://SwiftGodotBuilder/documentation/SwiftGodotBuilder/GameTimer/reset()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"()"}],"url":"\/documentation\/swiftgodotbuilder\/gametimer\/reset()","abstract":[{"text":"Clears accumulated time without changing the running state.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodotBuilder\/documentation\/SwiftGodotBuilder\/GameTimer\/reset()","type":"topic","title":"reset()"},"doc://SwiftGodotBuilder/documentation/SwiftGodotBuilder/GameTimer/elapsed":{"abstract":[{"type":"text","text":"Time already accumulated toward the next timeout, in seconds."}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"elapsed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"title":"elapsed","url":"\/documentation\/swiftgodotbuilder\/gametimer\/elapsed","identifier":"doc:\/\/SwiftGodotBuilder\/documentation\/SwiftGodotBuilder\/GameTimer\/elapsed","kind":"symbol","role":"symbol"},"doc://SwiftGodotBuilder/documentation/SwiftGodotBuilder/GameTimer":{"identifier":"doc:\/\/SwiftGodotBuilder\/documentation\/SwiftGodotBuilder\/GameTimer","navigatorTitle":[{"text":"GameTimer","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodotbuilder\/gametimer","role":"symbol","title":"GameTimer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GameTimer","kind":"identifier"}],"abstract":[{"text":"A lightweight, manually-driven timer with optional repetition and a timeout callback.","type":"text"}],"kind":"symbol"},"doc://SwiftGodotBuilder/documentation/SwiftGodotBuilder":{"type":"topic","url":"\/documentation\/swiftgodotbuilder","abstract":[],"title":"SwiftGodotBuilder","kind":"symbol","role":"collection","identifier":"doc:\/\/SwiftGodotBuilder\/documentation\/SwiftGodotBuilder"}}}